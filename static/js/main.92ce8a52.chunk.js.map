{"version":3,"sources":["components/Comfirm/index.js","views/confirm-demo.js","components/InputNumber/index.js","views/input-number-demo.js","views/App.js","serviceWorker.js","index.js"],"names":["Confirm","_this$props","this","props","title","onOk","onCancel","react_default","a","createElement","className","onClick","Component","node","obj","show","Promise","res","rej","document","body","appendChild","ReactDOM","render","Comfirm_Confirm","hide","unmountComponentAtNode","removeChild","confirm","ConfirmDemo","console","log","style","padding","React","InputNumber","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","innerValue","str","max","min","isNumber","RegExp","test","num","Number","setState","defaultValue","val","onChange","currentValue","value","handleInput","result","isControl","_this$props2","Infinity","_this$props3","_this2","e","input","target","add","sub","defaultProps","InputNumberDemo","_this$state","src_components_InputNumber","marginTop","App","current","react_router_dom","to","display","react_router","path","component","Boolean","window","location","hostname","match","src_views_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92ce8a52.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css';\r\n\r\nclass Confirm extends Component{\r\n\trender() {\r\n\t\tconst { title, onOk, onCancel } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"mask\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"header\">Confirm</div>\r\n\t\t\t\t\t<div className=\"contextArea\">\r\n\t\t\t\t\t\t<p>{ title }</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ul className=\"btnArea\">\r\n\t\t\t\t\t\t<li onClick={() => {\r\n\t\t\t\t\t\t\tonOk();\r\n\t\t\t\t\t\t}}>是</li>\r\n\t\t\t\t\t\t<li onClick={() => {\r\n\t\t\t\t\t\t\tonCancel();\r\n\t\t\t\t\t\t}}>否</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet node = null;\r\nconst obj = {\r\n\tshow(title) {\r\n\t\treturn new Promise((res, rej) => {\r\n\t\t\tnode = document.createElement('div');\r\n\t\t\tdocument.body.appendChild(node);\r\n\t\t\tReactDOM.render(<Confirm title={title} onOk={() => {\r\n\t\t\t\tres(true);\r\n\t\t\t\tobj.hide();\r\n\t\t\t}} onCancel={() => {\r\n\t\t\t\tres(false);\r\n\t\t\t\tobj.hide();\r\n\t\t\t}}/>, node);\r\n\t\t});\r\n\t},\r\n\thide() {\r\n\t\tif(node) {\r\n\t\t\tReactDOM.unmountComponentAtNode(node);\r\n\t\t\tdocument.body.removeChild(node);\r\n\t\t}\r\n\t},\r\n\tconfirm(title) {\r\n\t\treturn obj.show(title);\r\n\t},\r\n};\r\n\r\nexport default obj.confirm;","import React from 'react';\r\nimport confirm from '../components/Comfirm/index';\r\n\r\nclass ConfirmDemo extends React.Component{\r\n\tasync componentDidMount() {\r\n\t\tlet res = await confirm('确认要删除吗？');\r\n\t\tif (res) {\r\n\t\t\tconsole.log('是');\r\n\t\t} else {\r\n\t\t\tconsole.log('否');\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ padding: 20 }}>\r\n\t\t\t\tconfirm会在页面加载完成后弹出\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default ConfirmDemo;\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport './index.css';\r\nclass InputNumber extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tinnerValue: '',\r\n\t\t};\r\n\t}\r\n\tstatic propTypes = {\r\n\t\tvalue: Proptypes.string,\r\n\t\tmax: Proptypes.number,\r\n\t\tmin: Proptypes.number,\r\n\t\tonChange: Proptypes.func,\r\n\t\tdefaultValue: Proptypes.string,\r\n\t};\r\n\tstatic defaultProps = {\r\n\t\tonChange: () => {},\r\n\t\tmax: Infinity,\r\n\t\tmin: -Infinity,\r\n\t};\r\n\t\r\n\thandleInput(str) {\r\n\t\tconst { max, min } = this.props;\r\n\t\tconst pattern = new RegExp(\"^(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+)?$\");\r\n\t\tconst isNumber = pattern.test(str);\r\n\t\tconst num = Number(str);\r\n\t\tif (isNumber) {\r\n\t\t\tif (num >= max) {\r\n\t\t\t\treturn max;\r\n\t\t\t} else if (num <= min) {\r\n\t\t\t\treturn min;\r\n\t\t\t} else {\r\n\t\t\t\treturn num;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\t\r\n\tget isControl() {\r\n\t\treturn 'value' in this.props;\r\n\t}\r\n\t\r\n\tget value() {\r\n\t\tif (this.isControl) {\r\n\t\t\treturn this.handleInput(this.props.value);\r\n\t\t} else {\r\n\t\t\treturn this.handleInput(this.state.innerValue);\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tinnerValue: this.props.defaultValue,\r\n\t\t});\r\n\t}\r\n\t\r\n\tinput(val) {\r\n\t\tconst { onChange } = this.props;\r\n\t\tconst currentValue = this.value;\r\n\t\tlet value = this.handleInput(val);\r\n\t\tlet result = val === '' ? '' : (value === '' ? currentValue : value);\r\n\t\tif (!this.isControl) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinnerValue: result,\r\n\t\t\t});\r\n\t\t}\r\n\t\tonChange && onChange(result);\r\n\t}\r\n\t\r\n\tadd() {\r\n\t\tconst { max, min, onChange } = this.props;\r\n\t\tconst currentValue = this.value;\r\n\t\tlet value = '';\r\n\t\tif (currentValue) {\r\n\t\t\tif (Number(currentValue) >= max) {\r\n\t\t\t\tvalue = Number(currentValue);\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Number(currentValue) + 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (min !== -Infinity) {\r\n\t\t\t\tvalue = min;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.isControl) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinnerValue: value,\r\n\t\t\t});\r\n\t\t}\r\n\t\tonChange && onChange(value);\r\n\t}\r\n\t\r\n\tsub() {\r\n\t\tconst { max, min, onChange } = this.props;\r\n\t\tconst currentValue = this.value;\r\n\t\tlet value = '';\r\n\t\tif (currentValue) {\r\n\t\t\tif (Number(currentValue) <= min) {\r\n\t\t\t\tvalue = Number(currentValue);\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Number(currentValue) - 1;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (max !== Infinity) {\r\n\t\t\t\tvalue = max;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!this.isControl) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinnerValue: value,\r\n\t\t\t});\r\n\t\t}\r\n\t\tonChange && onChange(value);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"inputDom\">\r\n\t\t\t\t\t<input value={this.value} onChange={(e) => {\r\n\t\t\t\t\t\tthis.input(e.target.value);\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<div className=\"btnDom\">\r\n\t\t\t\t\t\t<div className=\"btn\" onClick={() => {\r\n\t\t\t\t\t\t\tthis.add();\r\n\t\t\t\t\t\t}}>+</div>\r\n\t\t\t\t\t\t<div className=\"btn\" onClick={() => {\r\n\t\t\t\t\t\t\tthis.sub();\r\n\t\t\t\t\t\t}}>-</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default InputNumber;\r\n","import React from 'react';\r\nimport InputNumber from '../components/InputNumber/index';\r\n\r\nclass InputNumberDemo extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalue: '',\r\n\t\t\tdefaultValue: '20',\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst { value, defaultValue } = this.state;\r\n\t\treturn (\r\n\t\t\t<div style={{ padding: 20 }}>\r\n\t\t\t\t受控的组件（最小值2，最大值1000）\r\n\t\t\t\t<InputNumber value={value} min={2} max={1000} onChange={value => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t});\r\n\t\t\t\t}} />\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t不受控的组件（未设置最大最小值）\r\n\t\t\t\t<InputNumber defaultValue={defaultValue} />\r\n\t\t\t\t<p style={{ marginTop: 10 }}>该组件可以设置最大最小值，或者直接输入</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InputNumberDemo;\r\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tLink\n}from 'react-router-dom';\nimport ConfirmDemo from './confirm-demo';  // 导入ConfirmDemo组件\nimport InputNumberDemo from './input-number-demo';  // 导入ConfirmDemo组件\nimport './App.css';\n\nclass  App extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrent: 0,\n\t\t};\n\t}\n\trender() {\n\t\tconst { current } = this.state;\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<ul className=\"nav\">\n\t\t\t\t\t\t<li className={ current === 1 ? 'current' : '' } onClick={() => this.setState({\n\t\t\t\t\t\t\tcurrent: 1,\n\t\t\t\t\t\t})}><Link to=\"/input-number-demo\" style={{ display: 'block' }}>受控组件和非受控组件DEMO</Link></li>\n\t\t\t\t\t\t<li className={ current === 2 ? 'current' : '' } onClick={() => this.setState({\n\t\t\t\t\t\t\tcurrent: 2,\n\t\t\t\t\t\t})}><Link to=\"/confirm-demo\" style={{ display: 'block' }}>confirm组件DEMO</Link></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<Route path=\"/confirm-demo\" component={ConfirmDemo} />\n\t\t\t\t\t<Route path=\"/input-number-demo\" component={InputNumberDemo} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}